{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","play","id","document","getElementById","innerText","state","input","addEventListener","event","keyCode","style","Layout","btn","className","onClick","this","bind","btn_size","src","type","React","Component","display","gridTemplateColumns","gridTemplateRows","width","position","top","height","background","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3663205.chunk.js","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';   how u import css\n\n\n// const sounds = [\n//   {\n//     name: \"Cowbell\",\n//     source: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/heavy-drumkit/8[kb]COWBELL1.aif.mp3\",\n//     keyCode: 81,\n//     key: \"Q\",\n//     color: \"red\"\n//   }, \n//   {\n//     name: \"Snare\",\n//     source: \"\",\n//     keyCode: 87,\n//     key: \"W\",\n//     color: \"orange\"\n//   },\n//   {\n//     name: \"Clap\",\n//     source: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/heavy-drumkit/54[kb]CLAPPO0.aif.mp3\",\n//     keyCode: 69,\n//     key: \"E\",\n//     color: \"yellow\"\n//   },\n//   {\n//     name: \"HH-Closed\",\n//     source: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/heavy-drumkit/12[kb]HHCLOSE2.aif.mp3\",\n//     keyCode: 65,\n//     key: \"A\",\n//     color: \"green\"\n//   },\n//   {\n//     name: \"HH-Open\",\n//     source: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/heavy-drumkit/31[kb]HHOPEN1.aif.mp3\",\n//     keyCode: 83,\n//     key: \"S\",\n//     color: \"blue\"\n//   },\n//   {\n//     name: \"Rim-Shot\",\n//     source: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/heavy-drumkit/14[kb]RIMSHOT1.aif.mp3\",\n//     keyCode: 68,\n//     key: \"D\",\n//     color: \"indigo\"\n//   }, \n//   {\n//     name: \"Kick\",\n//     source: \"https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/591[kb]070_dark-history-kicks.wav.mp3\",\n//     keyCode: 90,\n//     key: \"Z\",\n//     color: \"purple\"\n//   },\n//   {\n//     name: \"Ride\",\n//     source: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/heavy-drumkit/125[kb]RIDE.aif.mp3\",\n//     keyCode: 88,\n//     key: \"X\",\n//     color: \"maroon\"\n//   },\n//   {\n//     name: \"Crash\",\n//     source: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/heavy-drumkit/102[kb]CRASH.aif.mp3\",\n//     keyCode: 67,\n//     key: \"C\",\n//     color: \"gold\"\n//   }\n// ];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    }\n   \n  }\n\n\n  \n  \n\n  play = (id) =>{\n \n    var q = document.getElementById(id);\n     q.play();\n \n    if(id === 'Q'){\n     document.getElementById('display').innerText = 'Q is playing';\n    }\n    else if (id === 'W'){\n      document.getElementById('display').innerText = 'W is playing';\n    }\n    else if (id === 'E'){\n      document.getElementById('display').innerText = 'E is playing';\n    }\n\n    else if (id === 'A'){\n      document.getElementById('display').innerText = 'A is playing';\n    }\n\n    else if (id === 'S'){\n      document.getElementById('display').innerText = 'S is playing';\n    }\n\n    else if (id === 'D'){\n      document.getElementById('display').innerText = 'D is playing';\n    }\n    else if (id === 'Z'){\n      document.getElementById('display').innerText = 'Z is playing';\n    }\n    else if (id === 'X'){\n      document.getElementById('display').innerText = 'X is playing';\n    }\n    else if (id === 'C'){\n      document.getElementById('display').innerText = 'C is playing';\n    }\n  }\n\n  \n  render(){\n\n    \n   \n    document.addEventListener('keydown', function(event) {\n      if(event.keyCode === 81) {\n        var q = document.getElementById('Q');\n        q.play();\n\n    document.getElementById('display').innerText = 'Q is playing';\n        \n       \n        \n      }\n      else if(event.keyCode === 87) {\n        var q1 = document.getElementById('W');\n        q1.play();\n        document.getElementById('display').innerText = 'W is playing';\n       \n      }\n      else if(event.keyCode === 69) {\n        document.getElementById('E').play();\n        document.getElementById('display').innerText = 'E is playing';\n        \n      \n      }\n\n      else if(event.keyCode === 65) {\n        document.getElementById('A').play();\n        document.getElementById('display').innerText = 'A is playing';\n      \n      }\n\n      else if(event.keyCode === 83) {\n        document.getElementById('S').play();\n        document.getElementById('display').innerText = 'S is playing';\n      \n      }\n\n      else if(event.keyCode === 68) {\n        document.getElementById('D').play();\n        document.getElementById('display').innerText = 'D is playing';\n     \n      \n      }\n    \n      else if(event.keyCode === 90) {\n        document.getElementById('Z').play();\n        document.getElementById('display').innerText = 'Z is playing';\n       \n      }\n\n      else if(event.keyCode === 88) {\n        document.getElementById('X').play();\n        document.getElementById('display').innerText = 'X is playing';\n\n        \n\n        \n      \n      }\n      else if(event.keyCode === 67) {\n        document.getElementById('C').play();\n        document.getElementById('display').innerText = 'C is playing';\n\n        \n      \n      }\n      \n      \n      \n      \n      \n      \n      \n  });\n    return (\n      <div id='drum-machine'>\n        <div style={Layout} >\n          <div style={btn}>\n         \n\n\n \n\n\n\n\n\n\n\n          \n  \n\n\n\n\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'Q')} id='Q1' style={btn_size}>Q\n               \n               <audio className='clip' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/591[kb]070_dark-history-kicks.wav.mp3' type='audio/mp3'  id='Q'>\n\n\n                      </audio>\n               </button>\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'W')} id='W1' style={btn_size}>W\n               \n               <audio  className='clip'  id='W' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/1182[kb]070_laidback-swingy-kick-snare-hat.wav.mp3'>\n\n\n</audio>\n               </button>\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'E')} id='E1' style={btn_size}>E\n               <audio  className='clip'  id='E' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/1182[kb]070_laidback-swingy-kick-snare-hat.wav.mp3'>\n\n</audio>\n\n               </button>\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'A')} id='A1' style={btn_size}>A\n               <audio  className='clip'  id='A' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/1182[kb]070_laidback-swingy-kick-snare-hat.wav.mp3'>\n\n\n</audio>\n               </button>\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'S')} id='S1' style={btn_size}>S\n               <audio  className='clip'  id='S' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/1182[kb]070_laidback-swingy-kick-snare-hat.wav.mp3'>\n\n</audio>\n               </button>\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'D')} id='D1' style={btn_size}>D\n               <audio  className='clip'  id='D' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/1182[kb]070_laidback-swingy-kick-snare-hat.wav.mp3'>\n\n\n</audio>\n               </button>\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'Z')} id='Z1' style={btn_size}>Z\n               \n<audio  className='clip'  id='Z' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/1182[kb]070_laidback-swingy-kick-snare-hat.wav.mp3'>\n\n \n</audio>\n          \n               </button>\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'X')} id='X1' style={btn_size}>X\n               \n<audio  className='clip'  id='X' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/1182[kb]070_laidback-swingy-kick-snare-hat.wav.mp3'>\n\n\n</audio>\n               </button>\n               <button className={'drum-pad'} onClick={this.play.bind(this, 'C')} id='C1' style={btn_size}>C\n               \n<audio  className='clip'  id='C' src='https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/000%20to%20080%20bpm/1182[kb]070_laidback-swingy-kick-snare-hat.wav.mp3'>\n\n\n</audio>\n               </button>\n               \n            \n          </div>\n\n          <div>\n           <pre id='display'></pre>\n          </div>\n\n        </div>\n          \n           \n       </div>\n      );\n      \n  }\n\n}\n\nconst btn = {\n\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr 1fr',\n  gridTemplateRows: '1fr 1fr 1fr',\n  width: '100%'\n\n}\n\n\n\nconst btn_size ={\n  width: 'auto'\n}\n\nconst Layout = {\n  width: '100%',\n  position: 'absolute',\n  top: '200px',\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n \n\n  height: '50%',\n  background: 'gray'\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}